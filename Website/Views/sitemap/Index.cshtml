@using Service.Helpers
@using Domain
@{
    Response.ContentType = "text/xml";
    List<Category> categories = ViewBag.Categories as List<Category>;
    List<Province> provinces = ViewBag.Provinces as List<Province>;
    List<Tour> tours = ViewBag.Tours as List<Tour>;
    var host = HttpContext.Current.Request.Url.Host;
}
<?xml version="1.0" encoding="UTF-8" ?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1">
    <url>
        <loc>http://100tour.vn/</loc>
      
        <image:image>
            <image:loc>http://100tour.vn/Resources/Config/1/logo.png</image:loc>
        </image:image>
        <changefreq>daily</changefreq><priority>0.8</priority>
    </url>
    
    @foreach (Domain.Category item in categories)
    {
    <url>
        <loc>@string.Format("http://{0}{1}", host, UrlHelp.getCategoryUrl(item.Url, item.Name, item.ID))</loc>
       <changefreq>daily</changefreq><priority>0.8</priority>
        
    </url>
    }
    @foreach (Domain.Province item in provinces)
    {
    <url>
        <loc>@string.Format("http://{0}{1}", host, UrlHelp.getProvinceUrl(item.National.Name, item.Url, item.ID))</loc>
       
        @if (!string.IsNullOrEmpty(item.Avartar))
        {
        <image:image>
            <image:loc>@string.Format("{0}", FileHelper.GetProvince_Picture(item.Avartar, item.ID))</image:loc>
            <image:title>@item.Name</image:title>
        </image:image>
        }
        <changefreq>daily</changefreq><priority>0.8</priority>
    </url>
    }
    @foreach (Domain.Tour item in tours)
    {
        var province = provinces.SingleOrDefault(p => p.ID == item.DestinationProvinceID);
        if(province != null && province.National != null)
        {
            <url>
                <loc>@string.Format("http://{0}{1}", host, UrlHelp.getHotelUrl(province.National.Name, province.Name, item.Url, item.ID, item.DestinationNationalID))</loc>
       
                @if (item.TourPictures.FirstOrDefault(p => p.IsAvartar) != null)
                {
                    <image:image>
                        <image:loc>@string.Format("http://{0}{1}", host, FileHelper.GetTourService_Picture(item.TourPictures.FirstOrDefault(p => p.IsAvartar).FileName, item.ID))</image:loc>
                        <image:title>@item.Name</image:title>
                    </image:image>
                }
                  <changefreq>daily</changefreq><priority>0.8</priority>
            </url>
        }
    }
</urlset>
