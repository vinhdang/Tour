@model Website.Areas.Administrator.Models.Config.CreateConfigModel
@using Service.Helpers;
@{
    ViewBag.Title = "Sửa Cấu Hình";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml"; }
<div class="uiHeader mhl">
    <h2 class="uiHeaderTitle">
        Sửa Cấu Hình
    </h2>
</div>
<div class="pal grayArea uiBoxGray noborder">
    @using (Html.BeginForm("Edit", "Config"))
    {
        <table class="uiInfoTable" cellpadding="2" cellspacing="0">
            <tr class="dataRow">
                <td class="label">
                    @Html.LabelFor(r => r.Name)<span class="star">(*)</span>
                </td>
                <td class="dot">
                    :
                </td>
                <td class="data">
                    @Html.TextBoxFor(r => r.Name, new { @readonly = "readonly" })
                </td>
            </tr>
            @switch (Model.Type)
            {
                case 1:
                <tr class="dataRow">
                    <td class="label">
                        @Html.LabelFor(r => r.Value)<span class="star">(*)</span>
                    </td>
                    <td class="dot">
                        :
                    </td>
                    <td class="data">
                        @* @Html.TextBoxFor(r => r.Value, new { @class = "numerictextBox" })*@
                        <input class="numerictextBox valid" data-val="true" data-val-number="Giá trị phải là số."
                            data-val-required="Vui lòng nhập 'Giá trị'." id="Value" name="Value" type="text"
                            value="@Model.Value">
                    </td>
                </tr>
            
                              break;
                case 2:
                <tr class="dataRow">
                    <td class="label">
                        @Html.LabelFor(r => r.Value)<span class="star">(*)</span>
                    </td>
                    <td class="dot">
                        :
                    </td>
                    <td class="data">
                        @Html.TextAreaFor(r => r.Value)
                    </td>
                </tr>
               
                   break;
                case 3:
                <tr class="dataRow">
                    <td class="label">
                        @Html.LabelFor(r => r.Value)
                    </td>
                    <td class="dot">
                        :
                    </td>
                    <td class="data">
                        <script src="@Url.Content("~/ckeditor/ckeditor.js")" type="text/javascript"></script>
                        <script src="@Url.Content("~/ckfinder/ckfinder.js")" type="text/javascript"></script>
                        @Html.TextAreaFor(m => m.Value, new { id = "Value", @name = "Value" })
                        <script type="text/javascript">
                            var editor = CKEDITOR.replace("Value");
                            CKFinder.setupCKEditor(editor, "/ckfinder/");
                        </script>
                    </td>
                </tr>
               
                   break;
                case 4:
                <tr class="dataRow">
                    <td class="label">
                        @Html.LabelFor(r => r.Value)<span class="star">(*)</span>
                    </td>
                    <td class="dot">
                        :
                    </td>
                    <td class="data">
                        <script src="@Url.Content("~/ckfinder/ckfinder.js")" type="text/javascript"></script>
                        <script type="text/javascript">

                            function BrowseServer1() {
                                // You can use the "CKFinder" class to render CKFinder in a page:
                                var finder = new CKFinder();

                                finder.basePath = '/ckfinder/'; // The path for the installation of CKFinder (default = "/ckfinder/").
                                finder.selectActionFunction = SetFileField1;
                                finder.popup();

                                // It can also be done in a single line, calling the "static"
                                // popup( basePath, width, height, selectFunction ) function:
                                // CKFinder.popup( '../', null, null, SetFileField ) ;
                                //
                                // The "popup" function can also accept an object as the only argument.
                                // CKFinder.popup( { basePath : '../', selectActionFunction : SetFileField } ) ;
                            }

                            // This is a sample function which is called when a file is selected in CKFinder.
                            function SetFileField1(fileUrl) {
                                document.getElementById('Value').value = fileUrl;
                            }
                          
                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {

                                $(".btn_search").colorbox();

                            });</script>
                        @Html.TextBoxFor(u => u.Value, new { @class = "FiletextBox" })<input type="button"
                            value="Xem" onclick="BrowseServer1();" />
                        <a class="btn_search"  href="@FileHelper.GetConfig_Picture(Model.Value, Model.ConfigID)" title="@Model.Name">
                            Xem</a>
                    </td>
                </tr>
                
                                                                                                                     break;
            }
            <tr class="dataRow">
                <td class="label">
                    @Html.LabelFor(r => r.IsActive)
                </td>
                <td class="dot">
                    :
                </td>
                <td class="data">
                    @Html.CheckBoxFor(r => r.IsActive)
                </td>
            </tr>
            <tr class="spacer">
                <td colspan="3">
                    <hr />
                </td>
            </tr>
            <tr class="dataRow">
                <td class="label">
                </td>
                <td class="button" colspan="2">
                    <input type="submit" value="Lưu Thay Đổi" class="t-button" />
                    @Html.ActionLink("Danh Sách Cấu Hình", "Index", "Config", null, new { @class = "t-button" })
                </td>
            </tr>
        </table>
        @Html.ValidationSummary(false)
    }
</div>
